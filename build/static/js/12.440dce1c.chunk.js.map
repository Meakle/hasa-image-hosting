{"version":3,"sources":["pages/Register.jsx"],"names":["index","observer","AuthStore","useStores","history","useHistory","fade","keyframes","Wrapper","styled","div","StyleButton","Button","A","a","StyleInput","Input","name","className","wrapperCol","span","offset","initialValues","remember","onFinish","values","setUsername","username","setPassword","password","register","then","push","catch","error","console","log","onFinishFailed","errorInfo","Item","rules","required","message","validator","rule","value","test","Promise","reject","length","resolve","prefix","placeholder","min","max","type","getFieldValue","htmlType","onClick"],"mappings":"yPAQMA,EAAQC,aAAS,WAAO,IAEnBC,EAAaC,cAAbD,UACDE,EAAUC,cAKVC,EAAOC,YAAH,yFAWJC,EAAUC,IAAOC,IAAV,oEAAGD,CAAH,2JAOIH,GAGXK,EAAcF,YAAOG,KAAV,wEAAGH,CAAH,wBAIXI,EAAIJ,IAAOK,EAAV,8DAAGL,CAAH,uBAIDM,EAAaN,YAAOO,KAAV,uEAAGP,CAAH,oCAsChB,OACI,cAACD,EAAD,UACI,eAAC,IAAD,CACIS,KAAK,eACLC,UAAU,aACVC,WAAY,CAACC,KAAK,GAAIC,OAAQ,GAC9BC,cAAe,CACXC,UAAU,GAEdC,SAtCK,SAACC,GACdvB,EAAUwB,YAAYD,EAAOE,UAC7BzB,EAAU0B,YAAYH,EAAOI,UAC7B3B,EAAU4B,WACLC,MAAK,WACF3B,EAAQ4B,KAAK,aAEhBC,OAAM,SAACC,GACJC,QAAQC,IAAIF,OA+BZG,eA1CW,SAACC,GACpBH,QAAQC,IAAI,UAAWE,IAiCnB,UAUI,cAAC,IAAKC,KAAN,UAAW,gDACX,cAAC,IAAKA,KAAN,CACItB,KAAK,WACLuB,MAAO,CACH,CACIC,UAAU,EACVC,QAAS,wCAEb,CACIC,UAtCE,SAACC,EAAMC,GAC7B,MAAG,KAAKC,KAAKD,GAAeE,QAAQC,OAAO,gEACxCH,EAAMI,OAAS,GAAKJ,EAAMI,OAAS,GAAYF,QAAQC,OAAO,4CAC1DD,QAAQG,aA2BP,SAYI,cAACnC,EAAD,CAAYoC,OAAQ,cAAC,IAAD,CAAcjC,UAAU,wBAA0BkC,YAAY,yBAEtF,cAAC,IAAKb,KAAN,CACItB,KAAK,WACLuB,MAAO,CACH,CACIC,UAAU,EACVC,QAAS,kCAEb,CACIW,IAAK,EACLX,QAAS,mCAEb,CACIY,IAAK,GACLZ,QAAS,qCAbrB,SAiBI,cAAC3B,EAAD,CACIoC,OAAQ,cAAC,IAAD,CAAcjC,UAAU,wBAChCqC,KAAK,WACLH,YAAY,mBAIpB,cAAC,IAAKb,KAAN,CACItB,KAAK,kBACLuB,MAAO,CACH,CACIC,UAAU,EACVC,QAAS,kCAnET,SAAC,GAAD,IAAEc,EAAF,EAAEA,cAAF,MAAsB,CAC1Cb,UAD0C,SAChCC,EAAMC,GACZ,OAAGW,EAAc,cAAgBX,EAAcE,QAAQG,UAChDH,QAAQC,OAAO,kDA2DlB,SAUI,cAACjC,EAAD,CACIoC,OAAQ,cAAC,IAAD,CAAcjC,UAAU,wBAChCqC,KAAK,WACLH,YAAY,+BAKpB,eAAC,IAAKb,KAAN,WACI,cAAC5B,EAAD,CAAa4C,KAAK,UAAUE,SAAS,SAASvC,UAAU,oBAAxD,0BAGA,eAACL,EAAD,CAAG6C,QA7EC,WAChBtD,EAAQ4B,KAAK,WA4ED,UAAyB,cAAC,IAAD,IAAzB,8CAQLhC","file":"static/js/12.440dce1c.chunk.js","sourcesContent":["import React from 'react'\nimport { Form, Input, Button } from 'antd';\nimport { observer } from 'mobx-react'\nimport { useHistory } from 'react-router-dom'\nimport styled, {keyframes} from 'styled-components'\nimport { UserOutlined, LockOutlined, ArrowRightOutlined } from '@ant-design/icons';\nimport {useStores} from '../stores'\n\nconst index = observer(() => {\n\n    const {AuthStore} = useStores();\n    const history = useHistory();\n\n\n        //#region 样式 \n    // 淡入动画效果, styled-components 暴露出的API\n    const fade = keyframes`\n    from {\n        opacity: 0;\n        transform: translateY(40px);\n    }\n    to {\n        opacity: 1;\n        transform: translateY(0px);\n    }\n    `\n\n    const Wrapper = styled.div`\n        max-width: 600px;\n        margin: 30px auto;\n        padding: 30px 20px;\n        border-radius: 10px;\n        box-shadow: 3px 3px 20px #bebebe;\n        background-color: #fff;\n        animation: ${fade} 1500ms ease;\n    `\n\n    const StyleButton = styled(Button)`\n        border-radius: 4px;\n    `\n\n    const A = styled.a`\n        margin-left: 20px;\n    `\n\n    const StyleInput = styled(Input)`\n        height: 40px;\n        border-radius: 4px;\n    `\n    //#endregion\n\n    const onFinishFailed = (errorInfo) => {\n        console.log('Failed:', errorInfo);\n    };\n    const onFinish = (values) => {\n        AuthStore.setUsername(values.username);\n        AuthStore.setPassword(values.password);\n        AuthStore.register()\n            .then(() => {\n                history.push('/login');\n            })\n            .catch((error) => {\n                console.log(error);\n            })\n    };\n\n    const validatorUsername = (rule, value) => {\n        if(/\\W/.test(value)) return Promise.reject('只能是字母数字下划线');\n        if(value.length < 4 || value.length > 10)  return Promise.reject('长度为4-10个字符');\n        return Promise.resolve();\n    }\n\n    const validateConfirm = ({getFieldValue}) => ({\n        validator(rule, value){\n            if(getFieldValue('password') === value) return Promise.resolve();\n            return Promise.reject('两次密码不一致');\n        }\n    })\n\n    const handleClick = () => {\n        history.push('/login');\n    }\n\n    return (\n        <Wrapper>\n            <Form\n                name=\"normal_login\"\n                className=\"login-form\"\n                wrapperCol={{span:12, offset: 6}}\n                initialValues={{\n                    remember: true,\n                }}\n                onFinish={onFinish}\n                onFinishFailed={onFinishFailed}\n            >\n                <Form.Item><h1>注册</h1></Form.Item>\n                <Form.Item\n                    name=\"username\"\n                    rules={[\n                        {\n                            required: true,\n                            message: '请输入用户名',\n                        },\n                        {\n                            validator: validatorUsername\n                        }\n                    ]}\n                >\n                    <StyleInput prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"用户名\" />\n                </Form.Item>\n                <Form.Item\n                    name=\"password\"\n                    rules={[\n                        {\n                            required: true,\n                            message: '请输入密码',\n                        },\n                        {\n                            min: 4,\n                            message: '最少4个字符'\n                        },\n                        {\n                            max: 10,\n                            message: '最大10个字符'\n                        }\n                    ]}\n                >\n                    <StyleInput\n                        prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                        type=\"password\"\n                        placeholder=\"密码\"\n                    />\n                </Form.Item>\n\n                <Form.Item\n                    name=\"confirmPassword\"\n                    rules={[\n                        {\n                            required: true,\n                            message: '请确认密码',\n                        },\n                        validateConfirm\n                    ]}\n                >\n                    <StyleInput\n                        prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                        type=\"password\"\n                        placeholder=\"确认密码\"\n                    />\n                </Form.Item>\n\n\n                <Form.Item>\n                    <StyleButton type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n                        注册\n                    </StyleButton>\n                    <A onClick={handleClick}><ArrowRightOutlined/>&nbsp;已有账号?</A>\n                </Form.Item>\n            </Form>\n\n        </Wrapper>\n    );\n})\n\nexport default index;"],"sourceRoot":""}