{"version":3,"sources":["components/ResultLink.jsx","components/Uploader.jsx","components/Start.jsx","components/Welcome.jsx","pages/Home.jsx"],"names":["ResultLink","observer","props","Img","styled","img","Wrapper","div","Container","StyleInput","Input","serverFileUrl","url","console","log","ref","refURL","useRef","refHTML","copyLink","method","copy","current","state","value","message","success","href","target","rel","src","alt","title","okText","cancelText","onConfirm","type","handleMarkdown","Uploader","useStores","ImageStore","UserStore","Dragger","Upload","beforeUpload","file","currentUser","error","test","size","setFile","setFilename","name","upload","then","catch","tip","spinning","isUploading","className","InboxOutlined","serverFile","attributes","Start","beat","keyframes","A","a","history","useHistory","onClick","push","ArrowRightOutlined","Welcome","Title","p","SubTitle","Home","params","fade"],"mappings":"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","file":"static/js/9.cd05d88e.chunk.js","sourcesContent":["import React, { useRef } from 'react'\nimport { observer } from 'mobx-react'\nimport styled from 'styled-components'\nimport { Input, Popconfirm, message } from 'antd';\nimport copy from 'copy-to-clipboard';\n\n// 呜呜呜终于实现了一个组件的复用了\nconst ResultLink = observer((props) => {\n\n    // css in js\n    const Img = styled.img`\n        margin-top: 20px;\n        max-width: 200px;\n        max-height: 200px;\n        box-shadow: 3px 3px 10px #d9d9d9;\n    `\n    const Wrapper = styled.div`\n        margin-top: 20px;\n        padding: 50px;\n        background-color: #fff;\n        border: 1px dashed #d9d9d9;\n    `\n\n    const Container = styled.div`\n        display: flex !important;\n        flex-wrap: wrap;\n        margin-top: 30px;\n        justify-content: space-between;\n    `\n\n    const StyleInput = styled(Input)`\n        width: 550px;\n    `\n    const serverFileUrl = props.url;\n\n    console.log(props);\n\n    const refURL = useRef(null);\n    const refHTML = useRef(null);\n\n    const copyLink = (ref, method) => {\n        return () => {\n            if (method === 'URL') {\n                copy(ref.current.state.value);\n                message.success('拷贝成功!');\n            } else if (method === 'HTML') {\n                copy(`<img src=\"${ref.current.state.value}\" alt=\"\"/>`);\n                message.success('拷贝成功!');\n            } else if (method === 'Markdown') {\n                copy(`![](${ref.current.state.value})`);\n                message.success('拷贝成功!');\n            }\n        }\n    }\n\n    const handleHTML = (ref) => {\n        return `<img src=\"${ref}\" alt=\"\"/>`\n    }\n\n    const handleMarkdown = (ref) => {\n        return `![](${ref})`;\n    }\n\n    return (\n        <div>\n            <Wrapper>\n                <Container>\n                    <div>\n                        <h3>预览图片</h3>\n                        <a href={serverFileUrl} target=\"_blank\" rel=\"noreferrer\"><Img src={serverFileUrl} alt=\"\" /></a>\n                    </div>\n                    <div>\n                        <h3>结果链接</h3>\n\n                        <ul>\n                            <li>\n                                <h4>\n                                    <Popconfirm title=\"是否要复制内容到剪贴板？\" okText=\"是\" cancelText=\"否\" onConfirm={copyLink(refURL, \"URL\")}>\n                                        <a>👉&nbsp;URL(复制):</a>\n                                    </Popconfirm>\n                                </h4>\n                                <StyleInput type=\"text\" value={serverFileUrl} ref={refURL} />\n                            </li>\n\n                            <li>\n                                <h4>\n                                    <Popconfirm title=\"是否要复制内容到剪贴板？\" okText=\"是\" cancelText=\"否\" onConfirm={copyLink(refURL, \"HTML\")}>\n                                        <a>👉&nbsp;HTML(复制):</a>\n                                    </Popconfirm>\n                                </h4>\n                                <StyleInput type=\"text\" value={handleHTML(serverFileUrl)} ref={refHTML} />\n                            </li>\n\n                            <li>\n                                <h4>\n                                    <Popconfirm title=\"是否要复制内容到剪贴板？\" okText=\"是\" cancelText=\"否\" onConfirm={copyLink(refURL, \"Markdown\")}>\n                                        <a>👉&nbsp;Markdown(复制):</a>\n                                    </Popconfirm>\n                                </h4>\n                                <StyleInput type=\"text\" value={handleMarkdown(serverFileUrl)} />\n                            </li>\n                        </ul>\n                    </div>\n                </Container>\n\n\n            </Wrapper>\n        </div>\n    )\n})\n\nexport default ResultLink;","import React from 'react'\nimport { Upload, message, Spin } from 'antd';\nimport { InboxOutlined } from '@ant-design/icons';\nimport { observer } from 'mobx-react'\n\nimport { useStores } from '../stores'\nimport ResultLink from './ResultLink'\n\nconst Uploader = observer(() => {\n\n    const { ImageStore, UserStore } = useStores();\n\n    const { Dragger } = Upload;\n    \n    const props = {\n        beforeUpload: file => {\n            // 登录条件\n            if (UserStore.currentUser === null) {\n                message.error('请先登录!');\n                return false;\n            }\n            // 类型判断\n            if (!/(svg$)|(png$)|(jpg$)|(jpeg$)|(gif$)/ig.test(file.type)) {\n                message.error('只能上传svg, png, jpg, jpeg, gif格式的文件');\n                return false;\n            }\n            if (file.size > 1014 * 1024) {\n                message.error('图片最大1M');\n            }\n\n            ImageStore.setFile(file);\n            ImageStore.setFilename(file.name);\n            ImageStore.upload()\n                .then(() => {\n                    console.log('上传成功');\n                    message.success('This is a success message');\n                })\n                .catch(() => {\n                    console.log('上传失败');\n                });\n            return false;\n        }\n    };\n\n\n    return (\n        <div>\n            <Spin tip=\"上传中...\" spinning={ImageStore.isUploading}>\n                <Dragger {...props} >\n                    <p className=\"ant-upload-drag-icon\">\n                        <InboxOutlined />\n                    </p>\n                    <p className=\"ant-upload-text\">点击或者拖拽图片到这里上传</p>\n                    <p className=\"ant-upload-hint\">\n                        只能上传svg, png, jpg, jpeg, gif格式的文件, 图片最大1M\n                </p>\n                </Dragger>\n            </Spin>\n            {\n                ImageStore.serverFile ?\n                    <ResultLink url={ImageStore.serverFile.attributes.url.attributes.url} />\n                    : <></>\n            }\n        </div>\n    )\n})\n\nexport default Uploader;","import React from 'react'\nimport styled, { keyframes } from 'styled-components'\nimport { ArrowRightOutlined } from '@ant-design/icons'\nimport { useHistory } from 'react-router-dom'\n\nexport default function Start() {\n\n    const beat = keyframes`\n    0% {\n        transform: scale(1);\n    }\n    50% {\n        transform: scale(1.1);\n    }\n    100% {\n        transform: scale(1);\n    }\n    `\n\n    const A = styled.a`\n        display: inline-block;\n        font-size: 20px;\n        animation: ${beat} 2000ms 700ms 2;\n        transition: all 1s;\n        :hover{\n            transform: scale(1.1);\n        }\n    `\n    const history = useHistory();\n    const handleClick = () => {\n        history.push('/login');\n    }\n\n    return (\n        <>\n            <A onClick={handleClick}><ArrowRightOutlined />&nbsp;&nbsp;&nbsp;开始使用</A>\n        </>\n    )\n}\n","import React from 'react'\nimport {observer} from 'mobx-react'\nimport styled from \"styled-components\";\n\nimport Start from './Start'\n\nconst Welcome = observer(() => {\n\n    const Title = styled.p`\n        font-size: 70px;\n        letter-spacing: 40px;\n        line-height: 90px;\n        margin-bottom: 0.5em;\n    `\n\n    const SubTitle = styled.p`\n        font-size: 30px;\n        line-height: 40px;\n        letter-spacing: 10px;\n        color: #9e9e9e;\n    `\n\n    const Container = styled.div`\n        display: flex;\n        flex-direction: column;\n        height: 70vh;\n        justify-content: center;\n        align-items: center;\n    `\n\n    return (\n        <Container>\n            <Title>有一个图床</Title>\n            <SubTitle>一个简单的图床</SubTitle>\n            <Start/>\n        </Container>\n    )\n})\n\nexport default Welcome;\n","import React from 'react'\nimport {observer} from 'mobx-react'\nimport styled, {keyframes} from 'styled-components'\nimport { useStores } from '../stores'\n\nimport Uploader from '../components/Uploader'\nimport Tips from '../components/Welcome'\n\nconst Home = observer((params) => {\n\n    // 淡入动画效果, styled-components 暴露出的API\n    const fade = keyframes`\n    from {\n        opacity: 0;\n        transform: translateY(40px);\n    }\n    to {\n        opacity: 1;\n        transform: translateY(0px);\n    }\n    `\n\n    const Home = styled.div`\n        animation: ${fade} 1500ms ease;\n    `\n    const {UserStore} = useStores();\n\n    return (\n        <Home>\n            {\n                UserStore.currentUser ? <Uploader /> : <Tips />\n            }\n        </Home>\n    )\n});\n\nexport default Home;"],"sourceRoot":""}